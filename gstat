#!/usr/bin/env python3

import psutil
from rich.console import Console
from rich.live import Live
from rich.panel import Panel
from time import sleep

def create_graph_bar(usage, total_bars=30):
    """Create a text-based bar graph."""
    filled_bars = int(usage * total_bars)
    empty_bars = total_bars - filled_bars
    return f"[green]{'█' * filled_bars}[/green][red]{'░' * empty_bars}[/red]"

def get_cpu_and_ram_graph():
    """Generate CPU and RAM graphs."""
    cpu_usage = psutil.cpu_percent() / 100  # Normalize to 0-1
    ram_info = psutil.virtual_memory()
    ram_usage = ram_info.percent / 100  # Normalize to 0-1

    cpu_graph = create_graph_bar(cpu_usage)
    ram_graph = create_graph_bar(ram_usage)

    return f"""
[bold yellow]CPU Usage:[/bold yellow] {cpu_graph} {cpu_usage * 100:.1f}%
[bold yellow]RAM Usage:[/bold yellow] {ram_graph} {ram_usage * 100:.1f}%
    """

def display_graphs():
    """Continuously display CPU and RAM graphs."""
    with Live(refresh_per_second=2) as live:
        while True:
            panel = Panel(get_cpu_and_ram_graph(), title="[bold cyan]System Monitor[/bold cyan]")
            live.update(panel)
            sleep(1)

if __name__ == "__main__":
    display_graphs()

